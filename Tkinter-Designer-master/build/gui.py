
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import random
import re
import time



OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"D:\TkinterDesigner\Tkinter-Designer-master\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def getRandomNumber(min, max):
    return random.randint(min, max)

def createExpDate(month, year):
    return str(month) + "/" + str(year)

maleNames = [
    "Michael", "James", "John", "Robert", "David", 
    "William", "Christopher", "Matthew", "Joshua", 
    "Daniel", "Andrew", "Joseph", "Ryan", "Brandon", "Jacob"
]

femaleNames = [
    "Jessica", "Ashley", "Emily", "Sarah", "Megan", 
    "Amanda", "Hannah", "Lauren", "Brittany", "Samantha", 
    "Nicole", "Elizabeth", "Taylor", "Victoria", "Amber"
]

surnames = [
    "Smith", "Johnson", "Williams", "Brown", "Jones", 
    "Garcia", "Miller", "Davis", "Rodriguez", "Martinez",
    "Hernandez", "Lopez", "Gonzalez", "Wilson", "Anderson",
    "Thomas", "Taylor", "Moore", "Jackson", "Martin",
    "Lee", "Perez", "Thompson", "White", "Harris",
    "Sanchez", "Clark", "Ramirez", "Lewis", "Robinson"
]

images = [(f"image_{i}.png", f"image_{i+1}.png") for i in range(2, 17, 2)]


def createName(gender, chance):
    randomNumber = getRandomNumber(1, 100)
    if gender == 0:
        names = maleNames
    else:
        names = femaleNames

    name = names[getRandomNumber(0, len(names)-1)]
    surname = surnames[getRandomNumber(0, len(surnames)-1)]

    if randomNumber <= chance:
        while True:
            secondName = names[getRandomNumber(0, len(names)-1)]
            if secondName is not name:
                break
        return name + " " + secondName + " " + surname
    return name + " " + surname


def validateInput(cardNumber):
    if re.search(r"[^0-9\s\-]", cardNumber):
        return False
    return True


def clearInput(cardNumber):
    entry_1.delete(0, len(cardNumber))


def clearCardNumber():
    cardNumber = str(entry_1.get())
    clearInput(cardNumber)
    canvas.itemconfig(tagOrId=resultText, text="Waiting")
    canvas.itemconfig(tagOrId=resultColor, fill="#81B1FF")
    canvas.moveto(resultText, 76.0, 573.0)
    

def validateCardNumber():
    oddDigitsSum = 0
    evenDigitsSum = 0
    totalSum = 0

    cardNumber = str(entry_1.get())

    if not validateInput(cardNumber) or not cardNumber:
        canvas.itemconfig(tagOrId=resultText, text="Invalid card")
        canvas.itemconfig(tagOrId=resultColor, fill="#FF8080")
        canvas.moveto(resultText, 52.0, 573.0)
        return

    cardNumber = cardNumber.replace("-", "")
    cardNumber = cardNumber.replace(" ", "")
    cardNumber = cardNumber[::-1]

    for digit in cardNumber[::2]:
        oddDigitsSum = oddDigitsSum + int(digit)

    for digit in cardNumber[1::2]:
        digit = int(digit) * 2
        if digit >= 10:
            evenDigitsSum = evenDigitsSum + (1 + (digit % 10))
        else:
            evenDigitsSum = evenDigitsSum + digit

    totalSum = oddDigitsSum + evenDigitsSum

    if totalSum % 10 == 0:
        canvas.itemconfig(tagOrId=resultText, text="Valid card")
        canvas.itemconfig(tagOrId=resultColor, fill="#81FF85")
        canvas.moveto(resultText, 58.0, 573.0)
    else:
        canvas.itemconfig(tagOrId=resultText, text="Invalid card")
        canvas.itemconfig(tagOrId=resultColor, fill="#FF8080")
        canvas.moveto(resultText, 52.0, 573.0)

window = Tk()

window.geometry("1025x628")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 628,
    width = 1025,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    0.0,
    703.0,
    628.0,
    fill="#282828",
    outline="")

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    440.0,
    314.0,
    image=image_image_1
)

imagePair = getRandomNumber(0, len(images)-1)

image_image_2 = PhotoImage(
    file=relative_to_assets(images[imagePair][0]))
image_2 = canvas.create_image(
    642.0,
    470.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets(images[imagePair][1]))
image_3 = canvas.create_image(
    778.0,
    319.0,
    image=image_image_3
)

image_image_18 = PhotoImage(
    file=relative_to_assets("image_18.png"))
image_18 = canvas.create_image(
    511.0,
    315.0,
    image=image_image_18
)

canvas.create_text(
    304.0,
    423.0,
    anchor="nw",
    # second argument is chance in % of person having 2 names
    text=createName(getRandomNumber(0,1), 20),
    fill="#FFFFFF",
    font=("Courier", 20 * -1)
)

image_image_19 = PhotoImage(
    file=relative_to_assets("image_19.png"))
image_19 = canvas.create_image(
    331.0,
    279.0,
    image=image_image_19
)

image_image_20 = PhotoImage(
    file=relative_to_assets("image_20.png"))
image_20 = canvas.create_image(
    319.0,
    406.0,
    image=image_image_20
)

canvas.create_text(
    341.0,
    390.0,
    anchor="nw",
    text=createExpDate(getRandomNumber(1,12), getRandomNumber(24, 30)),
    fill="#FFFFFF",
    font=("Courier", 20 * -1)
)

image_image_21 = PhotoImage(
    file=relative_to_assets("image_21.png"))
image_21 = canvas.create_image(
    407.0,
    189.0,
    image=image_image_21
)

image_image_22 = PhotoImage(
    file=relative_to_assets("image_22.png"))
image_22 = canvas.create_image(
    335.0,
    324.0,
    image=image_image_22
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=validateCardNumber,
    relief="flat"
)
button_1.place(
    x=224.0,
    y=564.0,
    width=141.0,
    height=45.0
)

# visa or mastercard
if getRandomNumber(0, 1) == 0:
    image_image_23 = PhotoImage(
        file=relative_to_assets("image_23.png"))
    image_23 = canvas.create_image(
        703.0,
        435.0,
        image=image_image_23
    )
else:
    image_image_24 = PhotoImage(
        file=relative_to_assets("image_24.png"))
    image_24 = canvas.create_image(
        689.0,
        427.0,
        image=image_image_24
    )

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    519.5,
    356.0,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#2C2B2B",
    fg="#FFFFFF",
    font=("Courier", 28 * -1),
    highlightthickness=0
)
entry_1.place(
    x=308.0,
    y=334.0,
    width=423.0,
    height=42.0
)

resultColor = canvas.create_rectangle(
    28.0,
    564.0,
    203.0,
    609.0,
    fill="#81B1FF",
    outline="")

resultText = canvas.create_text(
    76.0,
    573.0,
    anchor="nw",
    text="Waiting",
    fill="#1A1A1A",
    font=("ChakraPetch Regular", 24 * -1)
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=clearCardNumber,
    relief="flat"
)
button_2.place(
    x=386.0,
    y=564.0,
    width=45.0,
    height=45.0
)

window.resizable(False, False)
window.mainloop()
